expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/gdcdataset.csv")
gtex_dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/gtexdataset.csv")
case_ids <- append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID)
labels <- append(gdc_dataset$Class, gtex_dataset$Class)
countsMatrix <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/gdcdataset.csv")
gtex_dataset <- read.csv("D:/data/RNASeq/dataset/gtexdataset.csv")
case_ids <- append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID)
labels <- append(gdc_dataset$Class, gtex_dataset$Class)
countsMatrix <- read.csv("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA.csv', row.names=TRUE)
print(class(labels))
labels <- append(gdc_dataset$Class, gtex_dataset$Class)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/gdcdataset.csv")
gtex_dataset <- read.csv("D:/data/RNASeq/dataset/gtexdataset.csv")
case_ids <- append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID)
labels <- append(gdc_dataset$Class, gtex_dataset$Class)
print(class(labels))
print(labels)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/gdcdataset.csv")
gtex_dataset <- read.csv("D:/data/RNASeq/dataset/gtexdataset.csv")
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
print(class(labels))
print(labels)
countsMatrix <- read.csv("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA.csv', row.names=TRUE)
print(dim(countsMatrix))
print(len(labels))
print(length(labels))
library(KnowSeq)
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/gdcdataset.csv")
gtex_dataset <- read.csv("D:/data/RNASeq/dataset/gtexdataset.csv")
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA.csv', row.names=TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
split = 0
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/labels/gdcdataset"+SPLIT+".csv")
SPLIT = "0"
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/labels/gdcdataset"+SPLIT+".csv")
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv"))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/gtex/labels/dataset",SPLIT,".csv", sep = ""))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/gtex/labels/gtexdataset",SPLIT,".csv", sep = ""))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA.csv', row.names=TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, paste('D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA-train',SPLIT,'.csv', sep=""), row.names=TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
print(length(case_ids))
print(length(case_ids))
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(countsMatrix)
print(length(labels))
print(length(case_ids))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
suppressMessages(library(KnowSeq))
print(x)
for (x in 1:10){
print(x)
}
for (x in 0:9){
print(x)
}
for (split in 0:9){
create_dataset(split, mode)
}
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
library(glue)
create_dataset <- function(SPLIT, mode) {
gdc_dataset <- read.csv(glue("D:/data/RNASeq/dataset/labels/gdcdataset_{mode}{SPLIT}.csv", sep = ""))
#gtex_dataset <- read.csv(glue("D:/data/RNASeq/dataset/labels/gtexdataset_{mode}{SPLIT}.csv", sep = ""))
case_ids <- gdc_dataset$Sample.ID#as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- gdc_dataset$Class##as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
print(labels)
countsMatrix <- read.csv(paste(glue("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC_{mode}_split"), SPLIT,".csv", sep = ""),row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
# Calculating gene expression values matrix using the counts matrix
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# library(preprocessCore)
# df_norm <- as.data.frame(normalize.quantiles(expressionMatrix))
# write.csv(df_norm,"D:/data/RNASeq/dataset/pre_removal.csv", row.names=TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
# df_norm <- as.data.frame(normalize.quantiles(expressionMatrix))
print(expressionMatrix)
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
print(DEGsInformation)
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
#write.csv(DEGsMatrix,"D:/data/RNASeq/dataset/post_removal.csv", row.names=TRUE)
DEGsMatrixML <- DEGsMatrix
#DEGsMatrixML <- DEGsMatrixML[, 1:dim(DEGsMatrixML)[2]-1]
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, paste('D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA-train',SPLIT,'.csv', sep=""), row.names=TRUE)
}
mode = "test"
for (split in 0:9){
create_dataset(split, mode)
}
mode = "train"
for (split in 0:9){
create_dataset(split, mode)
}
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
library(glue)
create_dataset <- function(SPLIT, mode) {
gdc_dataset <- read.csv(glue("D:/data/RNASeq/dataset/labels/TCIAdataset_{mode}{SPLIT}.csv", sep = ""))
#gtex_dataset <- read.csv(glue("D:/data/RNASeq/dataset/labels/TCIAdataset_{mode}{SPLIT}.csv", sep = ""))
case_ids <- gdc_dataset$Sample.ID#as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- gdc_dataset$Class##as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
#print(labels)
countsMatrix <- read.csv(paste(glue("D:/data/RNASeq/dataset/countsMatrix/countsMatrixTCIA_{mode}_split"), SPLIT,".csv", sep = ""),row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
# Calculating gene expression values matrix using the counts matrix
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# library(preprocessCore)
# df_norm <- as.data.frame(normalize.quantiles(expressionMatrix))
# write.csv(df_norm,"D:/data/RNASeq/dataset/pre_removal.csv", row.names=TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
# df_norm <- as.data.frame(normalize.quantiles(expressionMatrix))
print(expressionMatrix)
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
#print(DEGsInformation)
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
#write.csv(DEGsMatrix,"D:/data/RNASeq/dataset/post_removal.csv", row.names=TRUE)
DEGsMatrixML <- DEGsMatrix
#DEGsMatrixML <- DEGsMatrixML[, 1:dim(DEGsMatrixML)[2]-1]
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, paste('D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA-', mode ,SPLIT,'.csv', sep=""), row.names=TRUE)
}
mode = "test"
for (split in 7:10){
create_dataset(split, mode)
}
for (split in 7:10){
create_dataset(split, mode)
}
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.1, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
create_dataset <- function(SPLIT, mode) {
gdc_dataset <- read.csv(glue("D:/data/RNASeq/dataset/labels/TCIAdataset_{mode}{SPLIT}.csv", sep = ""))
#gtex_dataset <- read.csv(glue("D:/data/RNASeq/dataset/labels/TCIAdataset_{mode}{SPLIT}.csv", sep = ""))
case_ids <- gdc_dataset$Sample.ID#as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- gdc_dataset$Class##as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
#print(labels)
countsMatrix <- read.csv(paste(glue("D:/data/RNASeq/dataset/countsMatrix/countsMatrixTCIA_{mode}_split"), SPLIT,".csv", sep = ""),row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
# Calculating gene expression values matrix using the counts matrix
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# library(preprocessCore)
# df_norm <- as.data.frame(normalize.quantiles(expressionMatrix))
# write.csv(df_norm,"D:/data/RNASeq/dataset/pre_removal.csv", row.names=TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
# df_norm <- as.data.frame(normalize.quantiles(expressionMatrix))
#print(expressionMatrix)
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.1, number = Inf,
cov = 2)#svaCorrection = FALSE,
#print(DEGsInformation)
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
#write.csv(DEGsMatrix,"D:/data/RNASeq/dataset/post_removal.csv", row.names=TRUE)
DEGsMatrixML <- DEGsMatrix
#DEGsMatrixML <- DEGsMatrixML[, 1:dim(DEGsMatrixML)[2]-1]
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, paste('D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA-', mode ,SPLIT,'.csv', sep=""), row.names=TRUE)
}
mode = "test"
for (split in 7:10){
create_dataset(split, mode)
}
