pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
topTable <- DEGsInformation$Table
DEGsMatrix <- DEGsInformation$DEGsMatrix
print(labels)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/dataset.csv")
case_ids <- dataset$Case.ID
labels <- dataset$Class
print(labels)
countsMatrix <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/countsMatrixGDC.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(class(countsMatrix))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
svaCorrection = FALSE,
cov = 2)
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)svaCorrection = FALSE,
topTable <- DEGsInformation$Table
DEGsMatrix <- DEGsInformation$DEGsMatrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
topTable <- DEGsInformation$Table
DEGsMatrix <- DEGsInformation$DEGsMatrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
topTable <- DEGsInformation$Table
DEGsMatrix <- DEGsInformation$DEGsMatrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
print(DEGsMatrix)
print(topTable)
print(DEGsInformation)
print(topTable)
topTable <- DEGsInformation$DEGs_Table
print(topTable)
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGsMatrix
DEGsMatrixML <- DEGsMatrix
print(topTable)
print(topTable)
print(DEGsInformation$DEGs_Table)
print(DEGsInformation)
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
print(DEGsInformation)
print(topTable)
DEGsMatrix <- DEGsInformation$DEGsMatrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
print(DEFsMatrixML)
print(DEGsMatrixML)
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'mRMR-LC-3classes-RNA.csv', row.names=TRUE)
print(dataset)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/dataset.csv")
case_ids <- dataset$Sample.ID
labels <- dataset$Class
print(labels)
countsMatrix <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/countsMatrixGDC.csv", row.name=1)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/dataset.csv")
case_ids <- dataset$Sample.ID
labels <- dataset$Class
countsMatrix <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/countsMatrixGDC.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(class(countsMatrix))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'mRMR-LC-2classes-RNA.csv', row.names=TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/gdcdataset.csv")
gtex_dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/gtexdataset.csv")
case_ids <- append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID)
labels <- append(gdc_dataset$Class, gdc_dataset$Class)
countsMatrix <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/countsMatrixGDC.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(class(countsMatrix))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'mRMR-LC-2classes-RNA.csv', row.names=TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/gdcdataset.csv")
gtex_dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/gtexdataset.csv")
case_ids <- append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID)
labels <- append(gdc_dataset$Class, gdc_dataset$Class)
countsMatrix <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/gdcdataset.csv")
gtex_dataset <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/gtexdataset.csv")
case_ids <- append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID)
labels <- append(gdc_dataset$Class, gtex_dataset$Class)
countsMatrix <- read.csv("C:/Users/Alejandro/Desktop/heterogeneous-data/src/RNASeq/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/gdcdataset.csv")
gtex_dataset <- read.csv("D:/data/RNASeq/dataset/gtexdataset.csv")
case_ids <- append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID)
labels <- append(gdc_dataset$Class, gtex_dataset$Class)
countsMatrix <- read.csv("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA.csv', row.names=TRUE)
print(class(labels))
labels <- append(gdc_dataset$Class, gtex_dataset$Class)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/gdcdataset.csv")
gtex_dataset <- read.csv("D:/data/RNASeq/dataset/gtexdataset.csv")
case_ids <- append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID)
labels <- append(gdc_dataset$Class, gtex_dataset$Class)
print(class(labels))
print(labels)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/gdcdataset.csv")
gtex_dataset <- read.csv("D:/data/RNASeq/dataset/gtexdataset.csv")
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
print(class(labels))
print(labels)
countsMatrix <- read.csv("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA.csv', row.names=TRUE)
print(dim(countsMatrix))
print(len(labels))
print(length(labels))
library(KnowSeq)
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/gdcdataset.csv")
gtex_dataset <- read.csv("D:/data/RNASeq/dataset/gtexdataset.csv")
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX.csv", row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA.csv', row.names=TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
split = 0
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/labels/gdcdataset"+SPLIT+".csv")
SPLIT = "0"
gdc_dataset <- read.csv("D:/data/RNASeq/dataset/labels/gdcdataset"+SPLIT+".csv")
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv"))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/gtex/labels/dataset",SPLIT,".csv", sep = ""))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/gtex/labels/gtexdataset",SPLIT,".csv", sep = ""))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, 'D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA.csv', row.names=TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
# training
svaMod <- batchEffectRemoval(expressionMatrix, labels, method = "sva")
DEGsInformation <- DEGsExtraction(expressionMatrix, labels, lfc = 2,
pvalue = 0.01, number = Inf,
cov = 2)#svaCorrection = FALSE,
DEGsInformation <- DEGsInformation$DEG_Results
topTable <- DEGsInformation$DEGs_Table
DEGsMatrix <- DEGsInformation$DEGs_Matrix
DEGsMatrixML <- DEGsMatrix
DEGsMatrixML <- t(DEGsMatrixML)
# Feature selection process with mRMR and RF
mrmrRanking <-featureSelection(DEGsMatrixML,labels,colnames(DEGsMatrixML), mode = "mrmr")
save_df <- as.data.frame(DEGsMatrixML, row.names = case_ids)
reorder_df <- save_df[, mrmrRanking]
reorder_df$Labels <- labels
write.csv(reorder_df, paste('D:/data/RNASeq/dataset/mRMR-LC-2classes-RNA-train',SPLIT,'.csv', sep=""), row.names=TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
print(length(case_ids))
print(length(case_ids))
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
suppressMessages(library(KnowSeq))
library(caret)
library(KnowSeq)
SPLIT = "0"
gdc_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gdcdataset",SPLIT,".csv", sep = ""))
gtex_dataset <- read.csv(paste("D:/data/RNASeq/dataset/labels/gtexdataset",SPLIT,".csv", sep = ""))
case_ids <- as.vector(append(gdc_dataset$Sample.ID, gtex_dataset$Sample.ID))
labels <- as.vector(append(gdc_dataset$Class, gtex_dataset$Class))
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""), row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(dim(countsMatrix))
print(length(labels))
print(length(case_ids))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
countsMatrix <- read.csv(paste("D:/data/RNASeq/dataset/countsMatrix/countsMatrixGDC+GTEX_split",SPLIT,".csv", sep = ""))#, row.name=1)
countsMatrix <- as.matrix(countsMatrix)
print(countsMatrix)
print(length(labels))
print(length(case_ids))
# Downloading human annotation
myAnnotation <- getGenesAnnotation(rownames(countsMatrix))
expressionMatrix <- calculateGeneExpressionValues(countsMatrix, myAnnotation, genesNames = TRUE)
suppressMessages(library(KnowSeq))
